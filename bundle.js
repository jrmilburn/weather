(()=>{"use strict";var n,e,t,r,a={208:(n,e,t)=>{t.d(e,{A:()=>c});var r=t(354),a=t.n(r),o=t(314),i=t.n(o)()(a());i.push([n.id,"* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nhtml {\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n}\n\nbody {\n    height: 100vh;\n    width: 80%;\n    margin: auto;\n    display: grid;\n    grid-template-columns: 1.5fr 3fr 1.5fr;\n    grid-template-rows: 1.5fr 3fr 0.5fr;\n}\n\n.logo {\n    grid-row: 1/2;\n    grid-column: 1/2;\n    display: flex;\n    flex-direction: column;\n    align-items: baseline;\n    justify-content: center;\n}\n\n.search {\n    grid-row: 1/2;\n    grid-column: 2/3;\n}\n\n.temp-type {\n    grid-row: 1/2;\n    grid-column: 3/4;\n    display: flex;\n    gap: 0.5rem;\n    align-items: center;\n    justify-content: center;\n}\n\n.temp-type button {\n    padding: 0.25rem 1rem;\n    border: 1px solid rgba(0, 0, 0, 0.5); \n    background-color: white;\n    border-radius: 0.5rem;\n\n    transition: scale 0.2s, transform 0.2s;\n}\n\n.temp-type button:hover {\n    cursor: pointer;\n}\n\n.temp-type>.selected-button {\n    border: 2px solid rgba(0, 0, 0, 1);\n    scale: 1.1;\n    transform: translateY(-2%);\n}\n\n.main {\n    grid-row: 2/3;\n    grid-column: 2/3;\n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    grid-template-rows: 1fr 2fr;\n}\n\n.main-header {\n    text-align: center;\n    grid-row: 1/2;\n    grid-column: 1/3;\n}\n\n.main-weather {\n    display: grid;\n    grid-template-rows: 1fr 1fr;\n    grid-template-columns: 1fr;\n}\n\n.weather-main {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.main-details {\n    display: grid;\n    align-items: center;\n    grid-template-rows: 1fr 1fr;\n    grid-template-columns: 1fr 1fr;\n}\n\n.footer {\n    grid-row: 3/4;\n    grid-column: 2/3;\n    align-content: center;\n}\n\n.weather-main>img {\n    width: 4rem;\n    height: 4rem;\n    scale: 1.2;\n    position: absolute;\n    transform: translate(-65%, -15%);\n    z-index: -1;\n\n}\n\nh2 {\n    font-size: 3.5rem;\n}\n\nh3 {\n    font-size: 1.5rem;\n}\n\nform {\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 0.5rem;\n}\n\nform input {\n    padding: 0.5rem;\n    border-radius: 0.5rem;\n    border: 1px solid rgba(0, 0, 0, 0.3);;\n}\n\nform button {\n    border: none;\n    background: none;\n    border-radius: 0.5rem;\n    padding: 0.25rem;\n    transition: scale 0.5s, transform 0.5s;\n}\n\nform button:hover {\n    scale: 1.1;\n    transform: translateY(-3%);\n    cursor: pointer;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,mJAAmJ;AACvJ;;AAEA;IACI,aAAa;IACb,UAAU;IACV,YAAY;IACZ,aAAa;IACb,sCAAsC;IACtC,mCAAmC;AACvC;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,qBAAqB;IACrB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,aAAa;IACb,WAAW;IACX,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,qBAAqB;IACrB,oCAAoC;IACpC,uBAAuB;IACvB,qBAAqB;;IAErB,sCAAsC;AAC1C;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,kCAAkC;IAClC,UAAU;IACV,0BAA0B;AAC9B;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;AAC/B;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,2BAA2B;IAC3B,0BAA0B;AAC9B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,2BAA2B;IAC3B,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,qBAAqB;AACzB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,UAAU;IACV,kBAAkB;IAClB,gCAAgC;IAChC,WAAW;;AAEf;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,WAAW;AACf;;AAEA;IACI,eAAe;IACf,qBAAqB;IACrB,oCAAoC;AACxC;;AAEA;IACI,YAAY;IACZ,gBAAgB;IAChB,qBAAqB;IACrB,gBAAgB;IAChB,sCAAsC;AAC1C;;AAEA;IACI,UAAU;IACV,0BAA0B;IAC1B,eAAe;AACnB",sourcesContent:["* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nhtml {\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n}\n\nbody {\n    height: 100vh;\n    width: 80%;\n    margin: auto;\n    display: grid;\n    grid-template-columns: 1.5fr 3fr 1.5fr;\n    grid-template-rows: 1.5fr 3fr 0.5fr;\n}\n\n.logo {\n    grid-row: 1/2;\n    grid-column: 1/2;\n    display: flex;\n    flex-direction: column;\n    align-items: baseline;\n    justify-content: center;\n}\n\n.search {\n    grid-row: 1/2;\n    grid-column: 2/3;\n}\n\n.temp-type {\n    grid-row: 1/2;\n    grid-column: 3/4;\n    display: flex;\n    gap: 0.5rem;\n    align-items: center;\n    justify-content: center;\n}\n\n.temp-type button {\n    padding: 0.25rem 1rem;\n    border: 1px solid rgba(0, 0, 0, 0.5); \n    background-color: white;\n    border-radius: 0.5rem;\n\n    transition: scale 0.2s, transform 0.2s;\n}\n\n.temp-type button:hover {\n    cursor: pointer;\n}\n\n.temp-type>.selected-button {\n    border: 2px solid rgba(0, 0, 0, 1);\n    scale: 1.1;\n    transform: translateY(-2%);\n}\n\n.main {\n    grid-row: 2/3;\n    grid-column: 2/3;\n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    grid-template-rows: 1fr 2fr;\n}\n\n.main-header {\n    text-align: center;\n    grid-row: 1/2;\n    grid-column: 1/3;\n}\n\n.main-weather {\n    display: grid;\n    grid-template-rows: 1fr 1fr;\n    grid-template-columns: 1fr;\n}\n\n.weather-main {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.main-details {\n    display: grid;\n    align-items: center;\n    grid-template-rows: 1fr 1fr;\n    grid-template-columns: 1fr 1fr;\n}\n\n.footer {\n    grid-row: 3/4;\n    grid-column: 2/3;\n    align-content: center;\n}\n\n.weather-main>img {\n    width: 4rem;\n    height: 4rem;\n    scale: 1.2;\n    position: absolute;\n    transform: translate(-65%, -15%);\n    z-index: -1;\n\n}\n\nh2 {\n    font-size: 3.5rem;\n}\n\nh3 {\n    font-size: 1.5rem;\n}\n\nform {\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 0.5rem;\n}\n\nform input {\n    padding: 0.5rem;\n    border-radius: 0.5rem;\n    border: 1px solid rgba(0, 0, 0, 0.3);;\n}\n\nform button {\n    border: none;\n    background: none;\n    border-radius: 0.5rem;\n    padding: 0.25rem;\n    transition: scale 0.5s, transform 0.5s;\n}\n\nform button:hover {\n    scale: 1.1;\n    transform: translateY(-3%);\n    cursor: pointer;\n}"],sourceRoot:""}]);const c=i},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<n.length;d++){var A=[].concat(n[d]);r&&i[A[0]]||(void 0!==o&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=o),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),e.push(A))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},511:(n,e,t)=>{var r=t(72),a=t.n(r),o=t(825),i=t.n(o),c=t(659),s=t.n(c),d=t(56),A=t.n(d),l=t(540),u=t.n(l),m=t(113),p=t.n(m),f=t(208),C={};C.styleTagTransform=p(),C.setAttributes=A(),C.insert=s().bind(null,"head"),C.domAPI=i(),C.insertStyleElement=u(),a()(f.A,C),f.A&&f.A.locals&&f.A.locals},72:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},i=[],c=0;c<n.length;c++){var s=n[c],d=r.base?s[0]+r.base:s[0],A=o[d]||0,l="".concat(d," ").concat(A);o[d]=A+1;var u=t(l),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(m);else{var p=a(m,r);r.byIndex=c,e.splice(c,0,{identifier:l,updater:p,references:1})}i.push(l)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=r(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var c=t(o[i]);e[c].references--}for(var s=r(n,a),d=0;d<o.length;d++){var A=t(o[d]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}o=s}}},659:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},802:(n,e,t)=>{async function r(n){return(await fetch(`https://api.weatherapi.com/v1/current.json?key=91ad209f0ed849e9af263131241605&q=${n}`)).json()}t.d(e,{b:()=>r})},44:(n,e,t)=>{t.a(n,(async(n,e)=>{try{var r=t(802),a=t(954);t(511);const n=document.querySelector("button"),o=document.querySelector("input"),i=document.querySelector("#celcius"),c=document.querySelector("#fahrenheit");let s=await(0,r.b)("brisbane"),d=0;(0,a.X)(s,d),n.addEventListener("click",(async n=>{n.preventDefault(),s=await(0,r.b)(o.value),(0,a.X)(s,d)})),i.addEventListener("click",(n=>{n.preventDefault(),d=0,i.classList.add("selected-button"),c.classList.remove("selected-button"),(0,a.X)(s,d)})),c.addEventListener("click",(n=>{n.preventDefault(),d=1,i.classList.remove("selected-button"),c.classList.add("selected-button"),(0,a.X)(s,d)})),e()}catch(n){e(n)}}),1)},954:(n,e,t)=>{function r(n,e){console.log(n);const t=document.querySelector(".main"),r=document.querySelector("body"),a=document.createElement("div");a.classList.add("main-header");const o=document.createElement("div");o.classList.add("main-weather");const i=document.createElement("div");i.classList.add("weather-main");const c=document.createElement("div");c.classList.add("weather-comp");const s=document.createElement("div");s.classList.add("main-details");const d=document.createElement("h2"),A=document.createElement("h3"),l=document.createElement("h2"),u=document.createElement("p"),m=document.createElement("img"),p=document.createElement("div"),f=document.createElement("p"),C=document.createElement("h3"),g=document.createElement("div"),h=document.createElement("p"),b=document.createElement("h3"),B=document.createElement("div"),I=document.createElement("div"),y=document.createElement("p"),v=document.createElement("h3"),x=document.createElement("div"),w=document.createElement("p"),E=document.createElement("h3");t.textContent="",n.current.cloud<50?r.style.background="linear-gradient(white, rgba(135, 206, 235,0.5))":r.style.background="linear-gradient(white, rgba(0, 0, 0,0.3))",0===e?(l.textContent=`${n.current.temp_c}°C`,u.textContent=`Feels like: ${n.current.feelslike_c}°C`,b.textContent=`${n.current.wind_kph}km/h, ${n.current.wind_dir}`,E.textContent=`${n.current.pressure_mb}mb`):1===e&&(l.textContent=`${n.current.temp_f}°F`,u.textContent=`Feels like: ${n.current.feelslike_f}°F`,b.textContent=`${n.current.wind_mph}mph, ${n.current.wind_dir}`,E.textContent=`${n.current.pressure_in}in`),d.textContent=`${n.location.name}, ${n.location.region}`,A.textContent=`${n.location.localtime}`,m.src=n.current.condition.icon,f.textContent="Humidity",C.textContent=`${n.current.humidity}%`,p.appendChild(f),p.appendChild(C),h.textContent="Wind",B.innerHTML='<span class="material-symbols-outlined">\n    north\n    </span>',B.style.cssText=`width: 33px; transform: rotate(${n.current.wind_degree}deg)`,g.appendChild(h),g.appendChild(b),g.appendChild(B),y.textContent="UV",n.current.uv<=3?v.style.cssText="width: 2rem; height: 2rem; border-radius: 50%; text-align: center; background-color: green;":n.current.uv>3&&n.current.uv<7?v.style.cssText="width: 2rem; height: 2rem; border-radius: 50%; text-align: center; background-color: yellow;":n.current.uv>=7&&(v.style.cssText="width: 2rem; height: 2rem; border-radius: 50%; text-align: center; background-color: red;"),v.textContent=`${n.current.uv}`,I.appendChild(y),I.appendChild(v),w.textContent="Pressure",x.appendChild(w),x.appendChild(E),a.appendChild(d),a.appendChild(A),i.appendChild(m),i.appendChild(l),i.appendChild(u),o.appendChild(i),o.appendChild(c),s.appendChild(p),s.appendChild(g),s.appendChild(I),s.appendChild(x),t.appendChild(a),t.appendChild(o),t.appendChild(s)}t.d(e,{X:()=>r})}},o={};function i(n){var e=o[n];if(void 0!==e)return e.exports;var t=o[n]={id:n,exports:{}};return a[n](t,t.exports,i),t.exports}n="function"==typeof Symbol?Symbol("webpack queues"):"__webpack_queues__",e="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",t="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",r=n=>{n&&n.d<1&&(n.d=1,n.forEach((n=>n.r--)),n.forEach((n=>n.r--?n.r++:n())))},i.a=(a,o,i)=>{var c;i&&((c=[]).d=-1);var s,d,A,l=new Set,u=a.exports,m=new Promise(((n,e)=>{A=e,d=n}));m[e]=u,m[n]=n=>(c&&n(c),l.forEach(n),m.catch((n=>{}))),a.exports=m,o((a=>{var o;s=(a=>a.map((a=>{if(null!==a&&"object"==typeof a){if(a[n])return a;if(a.then){var o=[];o.d=0,a.then((n=>{i[e]=n,r(o)}),(n=>{i[t]=n,r(o)}));var i={};return i[n]=n=>n(o),i}}var c={};return c[n]=n=>{},c[e]=a,c})))(a);var i=()=>s.map((n=>{if(n[t])throw n[t];return n[e]})),d=new Promise((e=>{(o=()=>e(i)).r=0;var t=n=>n!==c&&!l.has(n)&&(l.add(n),n&&!n.d&&(o.r++,n.push(o)));s.map((e=>e[n](t)))}));return o.r?d:i()}),(n=>(n?A(m[t]=n):d(u),r(c)))),c&&c.d<0&&(c.d=0)},i.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return i.d(e,{a:e}),e},i.d=(n,e)=>{for(var t in e)i.o(e,t)&&!i.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},i.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),i.nc=void 0,i(44)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,